{"version":3,"sources":["Containers/App.js","Components/OutputBox.js","Components/InputBox.js","reportWebVitals.js","index.js"],"names":["App","useState","expression","setExpression","currentValue","setCurrentValue","prevValue","setPrevValue","lastOperator","setLastOperator","clearAll","evaluate","length","result","eval","replaceAll","Math","round","handleZero","val","handleNumber","handleDecimal","includes","handleOperator","slice","className","steps","output","clearCall","findAnswer","zHandler","nHandler","dHandler","oHandler","OutputBox","id","InputBox","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1928bceb.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport \"../index.css\";\nimport OutputBox from \"../Components/OutputBox.js\";\nimport InputBox from \"../Components/InputBox.js\";\n\nfunction App() {\n  const [expression, setExpression] = useState(\"\");\n  const [currentValue, setCurrentValue] = useState(\"0\");\n  const [prevValue, setPrevValue] = useState(\"0\");\n  const [lastOperator, setLastOperator] = useState(\"\");\n\n  function clearAll(){\n    setExpression(\"\");\n    setCurrentValue(\"0\");\n    setPrevValue(\"0\");\n    setLastOperator(\"\");\n  }\n\n  function evaluate(){\n    if (expression.length === 0 || expression === '-')\n      return;\n    let result = eval(expression.replaceAll('--', '+'));\n    result = Math.round(1000000000000 * result) / 1000000000000;\n    result = result + '';\n    setExpression(result);\n    setCurrentValue(result);\n    setPrevValue(result);\n    setLastOperator(\"\");\n  }\n\n  function handleZero(val){\n    setLastOperator(\"\");\n    if (prevValue.length===1 && prevValue === val)\n      return;\n    setPrevValue(prevValue+val);\n    setCurrentValue(prevValue+val);\n    setExpression(expression+val);\n  }\n\n  function handleNumber(val){\n    setLastOperator(\"\");\n    setPrevValue(prevValue === \"0\" ? val : prevValue+val);\n    setCurrentValue(prevValue === \"0\" ? val : prevValue+val);\n    setExpression(expression+val);\n  }\n\n  function handleDecimal(val){\n    setCurrentValue(prevValue);\n    setLastOperator(\"\");\n    if (prevValue === \"0\"){\n      setPrevValue(\"0.\");\n      setCurrentValue(prevValue);\n      setExpression(expression+\"0.\");\n      setCurrentValue(\"0.\");\n      return;\n    }\n    if (prevValue.includes(\".\"))\n      return;\n    setPrevValue(prevValue+'.');\n    setCurrentValue(prevValue);\n    setExpression(expression+'.');\n  }\n\n  function handleOperator(val){\n    setCurrentValue(val);\n    setPrevValue(\"0\");\n    if (expression.length === 0){\n      if (val === '-'){\n        setExpression('-');\n        setLastOperator('-');\n      }\n      return;\n    }\n    if (val === '-'){\n      if (lastOperator.length === 1){\n        setExpression(expression+'-');\n        setLastOperator(lastOperator+'-');\n        return;\n      }\n    }\n    setExpression(expression.slice(0, expression.length-lastOperator.length)+val);\n    setLastOperator(val);\n  }\n  \n  return (\n    <div>\n      <h1 className=\"text-gradient grad-insta\">Calculator</h1>\n      <div className=\"container\">\n        <OutputBox \n          steps={expression} \n          output={currentValue}\n        />\n        <InputBox \n          clearCall={clearAll} \n          findAnswer={evaluate}\n          zHandler={handleZero}\n          nHandler={handleNumber}\n          dHandler={handleDecimal}\n          oHandler={handleOperator}\n        />\n      </div>\n   </div>\n  );\n}\n\nexport default App;","import React from 'react';\r\nimport \"../index.css\";\r\n\r\nfunction OutputBox({steps, output}){\r\n\treturn (<div>\r\n\t\t<div className=\"steps-box\"><p>{steps}</p></div>\r\n\t\t<div className=\"output-box pp\" id=\"display\">{output}</div>\r\n\t</div>);\r\n}\r\n\r\nexport default OutputBox;","import React from 'react';\r\nimport \"../index.css\";\r\n\r\nfunction InputBox({clearCall, findAnswer, zHandler, nHandler, dHandler, oHandler}){\r\n\treturn (<div>\r\n\t\t<div className=\"top-part\">\r\n\t\t\t<div className=\"ac\" id=\"clear\" onClick={clearCall}>AC</div>\r\n\t\t\t<div className=\"division\" id=\"divide\" onClick={()=>oHandler('/')}>/</div>\r\n\t\t\t<div className=\"multiplication\" id=\"multiply\" onClick={()=>oHandler('*')}>X</div>\r\n\t\t</div>\r\n\t\t<div className=\"digits-box\">\r\n\t\t\t<div className=\"digit\" id=\"seven\" onClick={()=>nHandler('7')}>7</div>\r\n\t\t\t<div className=\"digit\" id=\"eight\" onClick={()=>nHandler('8')}>8</div>\r\n\t\t\t<div className=\"digit\" id=\"nine\" onClick={()=>nHandler('9')}>9</div>\r\n\t\t\t<div className=\"division\" id=\"subtract\" onClick={()=>oHandler('-')}>-</div>\r\n\t\t\t<div className=\"digit\" id=\"four\" onClick={()=>nHandler('4')}>4</div>\r\n\t\t\t<div className=\"digit\" id=\"five\" onClick={()=>nHandler('5')}>5</div>\r\n\t\t\t<div className=\"digit\" id=\"six\" onClick={()=>nHandler('6')}>6</div>\r\n\t\t\t<div className=\"division\" id=\"add\" onClick={()=>oHandler('+')}>+</div>\r\n\t\t\t<div className=\"digit\" id=\"one\" onClick={()=>nHandler('1')}>1</div>\r\n\t\t\t<div className=\"digit\" id=\"two\" onClick={()=>nHandler('2')}>2</div>\r\n\t\t\t<div className=\"digit\" id=\"three\" onClick={()=>nHandler('3')}>3</div>\r\n\t\t\t<div className=\"division\" id=\"decimal\" onClick={()=>dHandler('.')}>.</div>\r\n\t\t</div>\r\n\t\t<div className=\"bottom-part\">\r\n\t\t\t<div className=\"digit\" id=\"zero\" onClick={()=>zHandler('0')}>0</div>\r\n\t\t\t<div className=\"equal-to\" id=\"equals\" onClick={()=>findAnswer()}>=</div>\r\n\t\t</div>\r\n\t</div>);\r\n}\r\n\r\nexport default InputBox;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}